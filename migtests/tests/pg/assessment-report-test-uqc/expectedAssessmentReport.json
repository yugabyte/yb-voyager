{
	"VoyagerVersion": "IGNORED",
	"TargetDBVersion": "IGNORED",
	"MigrationComplexity": "MEDIUM",
	"SchemaSummary": {
		"Description": "Objects that will be created on the target YugabyteDB.",
		"DbName": "pg_assessment_report_uqc",
		"SchemaNames": [
			"sales",
			"analytics"
		],
		"DbVersion": "14.13 (Ubuntu 14.13-1.pgdg20.04+1)",
		"DatabaseObjects": [
			{
				"ObjectType": "SCHEMA",
				"TotalCount": 2,
				"InvalidCount": 0,
				"ObjectNames": "analytics, sales"
			},
			{
				"ObjectType": "EXTENSION",
				"TotalCount": 1,
				"InvalidCount": 0,
				"ObjectNames": "pg_stat_statements"
			},
			{
				"ObjectType": "TABLE",
				"TotalCount": 7,
				"InvalidCount": 2,
				"ObjectNames": "analytics.metrics, sales.orders, sales.test_json_chk, sales.events, sales.json_data, sales.customer_account, sales.recent_transactions"
			},
			{
				"ObjectType": "SEQUENCE",
				"TotalCount": 1,
				"InvalidCount":0,
				"ObjectNames": "sales.recent_transactions_transaction_id_seq"

			},
			{
				"ObjectType": "VIEW",
				"TotalCount": 3,
				"InvalidCount": 3,
				"ObjectNames": "sales.employ_depart_view, sales.event_analysis_view, sales.event_analysis_view2"
			},
			{
				"ObjectType": "FUNCTION",
				"TotalCount": 1,
				"InvalidCount": 1,
				"ObjectNames": "sales.get_user_info"
			}
		]
	},
	"Sizing": {
		"SizingRecommendation": {
			"ColocatedTables": [
				"sales.orders",
				"analytics.metrics",
				"sales.customer_account",
				"sales.recent_transactions",
				"sales.events",
				"sales.json_data",
				"sales.test_json_chk"
			],
			"ColocatedReasoning": "Recommended instance type with 4 vCPU and 16 GiB memory could fit 7 objects (7 tables/materialized views and 0 explicit/implicit indexes) with 0.00 MB size and throughput requirement of 0 reads/sec and 0 writes/sec as colocated. Non leaf partition tables/indexes and unsupported tables/indexes were not considered.",
			"ShardedTables": null,
			"NumNodes": 3,
			"VCPUsPerInstance": 4,
			"MemoryPerInstance": 16,
			"OptimalSelectConnectionsPerNode": 8,
			"OptimalInsertConnectionsPerNode": 12,
			"EstimatedTimeInMinForImport": 1,
			"ParallelVoyagerJobs": 1
		},
		"FailureReasoning": ""
	},
	"UnsupportedDataTypes": [
		{
			"SchemaName": "sales",
			"TableName": "event_analysis_view",
			"ColumnName": "all_event_ranges",
			"DataType": "datemultirange"
		}
	],
	"UnsupportedDataTypesDesc": "Data types of the source database that are not supported on the target YugabyteDB.",
	"UnsupportedFeatures": [
		{
			"FeatureName": "Aggregate Functions",
			"Objects": [
				{
					"ObjectName": "sales.event_analysis_view",
					"SqlStatement": "CREATE VIEW sales.event_analysis_view AS\n SELECT range_agg(event_range) AS all_event_ranges\n   FROM sales.events;"
				},
				{
					"ObjectName": "sales.event_analysis_view2",
					"SqlStatement": "CREATE VIEW sales.event_analysis_view2 AS\n SELECT range_intersect_agg(event_range) AS overlapping_range\n   FROM sales.events;"
				},
				{
					"ObjectName": "sales.employ_depart_view",
					"SqlStatement": "CREATE VIEW sales.employ_depart_view AS\n SELECT any_value(name) AS any_employee\n   FROM public.employees;"
				}
			],
			"MinimumVersionsFixedIn": null
		},
		{
			"FeatureName": "Jsonb Subscripting",
			"Objects": [
				{
					"ObjectName": "sales.test_json_chk",
					"SqlStatement": "CREATE TABLE sales.test_json_chk (\n    id integer,\n    name text,\n    email text,\n    active text,\n    data jsonb,\n    CONSTRAINT test_json_chk_data_check CHECK ((data['key'::text] \u003c\u003e '{}'::jsonb))\n);"
				}
			],
			"MinimumVersionsFixedIn": null
		},
		{	
			"FeatureName": "Json Type Predicate",
			"Objects": [
				{
					"ObjectName": "sales.json_data",
					"SqlStatement": "CREATE TABLE sales.json_data (\n    id integer NOT NULL,\n    array_column text,\n    unique_keys_column text,\n    CONSTRAINT json_data_array_column_check CHECK ((array_column IS JSON ARRAY)),\n    CONSTRAINT json_data_unique_keys_column_check CHECK ((unique_keys_column IS JSON WITH UNIQUE KEYS))\n);"
				}
			],
			"MinimumVersionsFixedIn": null
		}
	],
	"UnsupportedFeaturesDesc": "Features of the source database that are not supported on the target YugabyteDB.",
	"TableIndexStats": [
		{
			"SchemaName": "sales",
			"ObjectName": "customer_account",
			"RowCount": 4,
			"ColumnCount": 2,
			"Reads": 7,
			"Writes": 6,
			"ReadsPerSecond": 0,
			"WritesPerSecond": 0,
			"IsIndex": false,
			"ObjectType": "",
			"ParentTableName": null,
			"SizeInBytes": 8192
		},
		{
			"SchemaName": "sales",
			"ObjectName": "recent_transactions",
			"RowCount": 3,
			"ColumnCount": 3,
			"Reads": 3,
			"Writes": 3,
			"ReadsPerSecond": 0,
			"WritesPerSecond": 0,
			"IsIndex": false,
			"ObjectType": "",
			"ParentTableName": null,
			"SizeInBytes": 8192
		},
		{
			"SchemaName": "sales",
			"ObjectName": "test_json_chk",
			"RowCount": 2,
			"ColumnCount": 5,
			"Reads": 6,
			"Writes": 2,
			"ReadsPerSecond": 0,
			"WritesPerSecond": 0,
			"IsIndex": false,
			"ObjectType": "",
			"ParentTableName": null,
			"SizeInBytes": 8192
		},
		{
			"SchemaName": "sales",
			"ObjectName": "orders",
			"RowCount": 2,
			"ColumnCount": 3,
			"Reads": 0,
			"Writes": 2,
			"ReadsPerSecond": 0,
			"WritesPerSecond": 0,
			"IsIndex": false,
			"ObjectType": "",
			"ParentTableName": null,
			"SizeInBytes": 8192
		},
		{
			"SchemaName": "sales",
			"ObjectName": "events",
			"RowCount": 3,
			"ColumnCount": 2,
			"Reads": 6,
			"Writes": 3,
			"ReadsPerSecond": 0,
			"WritesPerSecond": 0,
			"IsIndex": false,
			"ObjectType": "",
			"ParentTableName": null,
			"SizeInBytes": 8192
		},
		{
			"SchemaName": "sales",
			"ObjectName": "json_data",
			"RowCount": 0,
			"ColumnCount": 3,
			"Reads": 0,
			"Writes": 0,
			"ReadsPerSecond": 0,
			"WritesPerSecond": 0,
			"IsIndex": false,
			"ObjectType": "",
			"ParentTableName": null,
			"SizeInBytes": 0
		},
		{
			"SchemaName": "analytics",
			"ObjectName": "metrics",
			"RowCount": 2,
			"ColumnCount": 3,
			"Reads": 2,
			"Writes": 2,
			"ReadsPerSecond": 0,
			"WritesPerSecond": 0,
			"IsIndex": false,
			"ObjectType": "",
			"ParentTableName": null,
			"SizeInBytes": 8192
		}
	],
	"Notes": null,
	"MigrationCaveats": null,
	"UnsupportedQueryConstructs": [
		{
			"ConstructTypeName": "Advisory Locks",
			"Query": "SELECT metric_name, pg_advisory_lock(metric_id)\nFROM analytics.metrics\nWHERE metric_value \u003e $1",
			"DocsLink": "https://docs.yugabyte.com/preview/yugabyte-voyager/known-issues/postgresql/#advisory-locks-is-not-yet-implemented",
			"MinimumVersionsFixedIn": null
		},
		{
			"ConstructTypeName": "Aggregate Functions",
			"Query": "SELECT range_intersect_agg(event_range) AS intersection_of_ranges\nFROM sales.events",
			"DocsLink": "",
			"MinimumVersionsFixedIn": null
		},
		{
			"ConstructTypeName": "Aggregate Functions",
			"Query": "SELECT range_agg(event_range) AS union_of_ranges\nFROM sales.events",
			"DocsLink": "",
			"MinimumVersionsFixedIn": null
		},
		{
			"ConstructTypeName": "Aggregate Functions",
			"Query": "SELECT\n        any_value(name) AS any_employee\n    FROM employees",
			"DocsLink": "",
			"MinimumVersionsFixedIn": null
		},
		{
			"ConstructTypeName": "Merge Statement",
			"Query": "MERGE INTO sales.customer_account ca\nUSING sales.recent_transactions t      \nON t.customer_id = ca.customer_id\nWHEN MATCHED THEN\n  UPDATE SET balance = balance + transaction_value\nWHEN NOT MATCHED THEN\n  INSERT (customer_id, balance)\n  VALUES (t.customer_id, t.transaction_value)",
			"DocsLink": "",
			"MinimumVersionsFixedIn": null
		},
		{
			
			"ConstructTypeName": "Jsonb Subscripting",
			"Query": "SELECT \n    data,\n    data[$1] AS name, \n    (data[$2]) as active\nFROM sales.test_json_chk",
			"DocsLink": "",
			"MinimumVersionsFixedIn": null
		},
		{
			"ConstructTypeName": "Jsonb Subscripting",
			"Query": "SELECT (sales.get_user_info($1))[$2] AS user_info",
			"DocsLink": "",
			"MinimumVersionsFixedIn": null
		},
		{
			"ConstructTypeName": "Jsonb Subscripting",
			"Query": "SELECT (jsonb_build_object($1, $2, $3, $4, $5, $6) || $7)[$8] AS json_obj",
			"DocsLink": "",
			"MinimumVersionsFixedIn": null
		},
		{
			"ConstructTypeName": "Jsonb Subscripting",
			"Query": "SELECT ($1 :: jsonb)[$2][$3] as b",
			"DocsLink": "",
			"MinimumVersionsFixedIn": null
		},
		{
			"ConstructTypeName": "Json Type Predicate",
			"Query": "SELECT * \nFROM sales.json_data\nWHERE array_column IS JSON ARRAY",
			"DocsLink": "",
			"MinimumVersionsFixedIn": null
		}
	],
	"UnsupportedPlPgSqlObjects": [
		{
			"FeatureName": "Jsonb Subscripting",
			"Objects": [
				{
					"ObjectType": "FUNCTION",
					"ObjectName": "sales.get_user_info",
					"SqlStatement": "SELECT\n        data,\n        data['name'] AS name,\n        (data['active']) as active\n    FROM sales.test_json_chk;"
				}
			],
			"MinimumVersionsFixedIn": null
		}
	]
}